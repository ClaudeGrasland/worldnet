---
title: "Agenda"
---

```{r, echo=FALSE,message=FALSE,error = FALSE}
library(knitr)
library(dplyr, quietly=TRUE)
library(data.table)
library(ggplot2)

knitr::opts_chunk$set(cache = FALSE,
                      echo = FALSE,
                      comment = "")
```

In this section we try to define an alternative measure of salience of a geographical entity (region or state) base on the *duration* of presence in the agenda rather than on the total number of news. As we are speaking from *daily* newspapers, we will try to estimate the *number of days* where an entity is present over a time period. 

## Data

We load an **hypercube** of news related to two newspaper (*Le Figaro* and *Le Monde*) characterized by an important an regular flow of news with an important proportion of international news. We consider two time periods of one year, 2019 and 2020.

```{r}
# Load Hypercube and select period
hc<-readRDS("hypercube/hc_sta_reg_day.RDS")
hc_figaro<- hc %>% filter(is.na(when)==F, when < as.Date("2022-06-30")) %>%
           filter(who=="fr_FRA_figaro") %>%
           arrange(when)

hc_lmonde<- hc %>% filter(is.na(when)==F, when < as.Date("2022-06-30")) %>%
           filter(who=="fr_FRA_lmonde") %>%
           arrange(when)

```


### Boolean table

We create for each type of geographical entities a boolean matrix crossing the existence or non existence of a newsby date


```{r, echo=TRUE}
# Le Figaro
tab1<-hc_figaro[,.(n=min(1,.N)),.(where1,when)] %>% dcast(formula = when~where1,fill = 0) 
tab2<-hc_figaro[,.(n=min(1,.N)),.(where2,when)] %>% dcast(formula = when~where2,fill = 0) 
tab_figaro<-cbind(tab1,tab2)

kable(tab_figaro[1:10,c("when","FRA","GBR","RUS","USA","CHN","OR_EU","CO_EUR")], 
      caption = "Extract from boolean matrix of Le Figaro")

# Le Monde
tab1<-hc_lmonde[,.(n=min(1,.N)),.(where1,when)] %>% dcast(formula = when~where1,fill = 0) 
tab2<-hc_lmonde[,.(n=min(1,.N)),.(where2,when)] %>% dcast(formula = when~where2,fill = 0) 
tab_lmonde<-cbind(tab1,tab2)

kable(tab_lmonde[1:10,c("when","FRA","GBR","RUS","USA","CHN","OR_EU","CO_EUR")], 
      caption = "Extract from boolean matrix of Le Monde")
```


### Visualization

An interesting solution for the visualization of such boolean data is the use of X-ray diagrams used in textual analysis for the visualization of wrods distribution in a text.
 
```{r}
sel<-c("OR_EU","CO_EUR", "CO_AFR","CO_ASI","CO_AME","SE_medit","OR_NATO","LA_sahel","LA_alpen")

x<-hc_figaro[,.(n=min(1,.N)),.(where2,when)] 
t<-x %>% filter(where2 %in% sel)

  ggplot(t,aes(x = when, y = 1))+
        geom_segment(aes(xend = when, yend = 0),alpha=0.5) +
       theme(axis.line = element_blank(),
                      panel.background = element_blank(),
                       panel.grid.major.y = element_blank(),
                       panel.grid.major.x = element_line(colour = "red",size = 0.4,linetype = 1),
                       panel.grid.minor.y = element_blank(),
                       plot.background = element_blank(),
                       axis.ticks.y = element_blank(),
                       axis.text.y = element_blank(),
                       panel.spacing = unit(0.1, "lines"),
                       panel.border = element_rect(colour = "black", fill = NA,),
                       strip.text.y =element_text(angle = 0))+
         facet_wrap(facets = ~where2,nrow = length(sel)) +
         ggtitle("Daily presence of selected macroregions in Le Figaro")
  
```

```{r}
sel<-c("OR_EU","CO_EUR", "CO_AFR","CO_ASI","CO_AME","SE_medit","OR_NATO","LA_sahel","LA_alpen")

x<-hc_lmonde[,.(n=min(1,.N)),.(where2,when)] 
t<-x %>% filter(where2 %in% sel)

  ggplot(t,aes(x = when, y = 1))+
        geom_segment(aes(xend = when, yend = 0),alpha=0.5) +
       theme(axis.line = element_blank(),
                      panel.background = element_blank(),
                       panel.grid.major.y = element_blank(),
                       panel.grid.major.x = element_line(colour = "red",size = 0.4,linetype = 1),
                       panel.grid.minor.y = element_blank(),
                       plot.background = element_blank(),
                       axis.ticks.y = element_blank(),
                       axis.text.y = element_blank(),
                       panel.spacing = unit(0.1, "lines"),
                       panel.border = element_rect(colour = "black", fill = NA,),
                       strip.text.y =element_text(angle = 0))+
         facet_wrap(facets = ~where2,nrow = length(sel)) +
         ggtitle("Daily presence of selected macroregions in Le Monde")
  
```
 
```{r}
sel<-c("FRA","GBR","USA","DEU", "TUN", "TUR", "RUS","UKR","SYR")

x<-hc_figaro[,.(n=min(1,.N)),.(where1,when)] 
t<-x %>% filter(where1 %in% sel)

  ggplot(t,aes(x = when, y = 1))+
        geom_segment(aes(xend = when, yend = 0),alpha=0.5) +
       theme(axis.line = element_blank(),
                      panel.background = element_blank(),
                       panel.grid.major.y = element_blank(),
                       panel.grid.major.x = element_line(colour = "red",size = 0.4,linetype = 1),
                       panel.grid.minor.y = element_blank(),
                       plot.background = element_blank(),
                       axis.ticks.y = element_blank(),
                       axis.text.y = element_blank(),
                       panel.spacing = unit(0.1, "lines"),
                       panel.border = element_rect(colour = "black", fill = NA,),
                       strip.text.y =element_text(angle = 0))+
         facet_wrap(facets = ~where1,nrow = length(sel)) +
         ggtitle("Daily presence of selected states in Le Figaro")
  
```

```{r}
sel<-c("FRA","GBR","USA","DEU", "TUN", "TUR", "RUS","UKR","SYR")

x<-hc_lmonde[,.(n=min(1,.N)),.(where1,when)] 
t<-x %>% filter(where1 %in% sel)

  ggplot(t,aes(x = when, y = 1))+
        geom_segment(aes(xend = when, yend = 0),alpha=0.5) +
       theme(axis.line = element_blank(),
                      panel.background = element_blank(),
                       panel.grid.major.y = element_blank(),
                       panel.grid.major.x = element_line(colour = "red",size = 0.4,linetype = 1),
                       panel.grid.minor.y = element_blank(),
                       plot.background = element_blank(),
                       axis.ticks.y = element_blank(),
                       axis.text.y = element_blank(),
                       panel.spacing = unit(0.1, "lines"),
                       panel.border = element_rect(colour = "black", fill = NA,),
                       strip.text.y =element_text(angle = 0))+
         facet_wrap(facets = ~where1,nrow = length(sel)) +
         ggtitle("Daily presence of selected states in Le Monde")
  
```











## Models

Different options of modelling are available for the evaluation of the cross-effects of media (m) and time period (t) on the probability to find a given number of news speaking from a geographical entity (s). We can separate initialy two family of models :

- **Poisson models family** will evaluate the number of news from media m at time t speaking from spatial object s (Nmts) as a function of the total number of news produced during the same period by the same media (Nmt) and parameters to be estimated concerning peaks of interest during certain periods of time (k1..kt) and specific focus of some medias on the spatial object (w1..wm).

- **Logit models family** will use a boolean approach and try to evaluate what is the probabilty to have at least one news about the spatial unit during a period of time which could typically a day as we are examining daily newspapers. This second family of models fit better in our opinion to the problem of measure of the agendas.

Not necessary to add that both models can finally be combine in hybrid models like the **zero-inflated Poisson model** which will be analyzed in final part of the discussion.


### Preparation of data


```{r}
hc<-readRDS("hypercube/hc_sta_reg_day.RDS")

time1<-as.Date("2018-12-31")
time2<-as.Date("2021-01-01")
medias<-c("fr_FRA_figaro", "fr_FRA_lmonde")
region<-c("CO_AFR")

sel<-hc  %>% filter(is.na(when)==F, 
               when >= time1,
               when <= time2,
               who %in% medias,
               where2 %in% region) %>%
           arrange(when)


tab<-sel[,.(n =.N),.(where2,when, who)]  %>% arrange(when)

#%>% dcast(formula = when~where1,fill = 0) 

```

